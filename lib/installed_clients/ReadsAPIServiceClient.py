# -*- coding: utf-8 -*-
############################################################
#
# Autogenerated by the KBase type compiler -
# any changes made here will be overwritten
#
############################################################

from __future__ import print_function
# the following is a hack to get the baseclient to import whether we're in a
# package or not. This makes pep8 unhappy hence the annotations.
try:
    # baseclient and this client are in a package
    from .baseclient import BaseClient as _BaseClient  # @UnusedImport
except ImportError:
    # no they aren't
    from baseclient import BaseClient as _BaseClient  # @Reimport


class ReadsAPI(object):

    def __init__(
            self, url=None, timeout=30 * 60, user_id=None,
            password=None, token=None, ignore_authrc=False,
            trust_all_ssl_certificates=False,
            auth_svc='https://ci.kbase.us/services/auth/api/legacy/KBase/Sessions/Login',
            service_ver='beta'):
        if url is None:
            url = 'https://kbase.us/services/service_wizard'
        self._service_ver = service_ver
        self._client = _BaseClient(
            url, timeout=timeout, user_id=user_id, password=password,
            token=token, ignore_authrc=ignore_authrc,
            trust_all_ssl_certificates=trust_all_ssl_certificates,
            auth_svc=auth_svc,
            lookup_url=True)

    def get_reads_info_all_formatted(self, params, context=None):
        """
        Returns all info about this Reads object.
        :param params: instance of type "ReadsParams" (ReadsAPI parameters
           string id - id of object string name - name of object string
           workspace_name - name of workspace string workspace_id - id of
           workspace string string workspace_obj_ref - workspace object ref)
           -> structure: parameter "id" of String, parameter "name" of
           String, parameter "workspace_name" of String, parameter
           "workspace_id" of String, parameter "workspace_obj_ref" of String
        :returns: instance of type "ReadsInfoAll" (Reads info all string id
           string Name; string workspace_name string Type string Platform
           string Single_Genome string Strain string Source string
           Number_of_Reads string Total_Number_of_Bases string GC_Percentage
           string Mean_Read_Length string Read_Length_Std_Dev string
           Phred_Type string Number_of_Duplicate_Reads - number of duplicate
           and (%) string Quality_Score_Min_Max - quality min and max X/ Y
           string Quality_Score_Mean_Std_Dev - mean (st dev) string
           Insert_Size_Mean string Insert_Size_Std_Dev string
           Outward_Read_Orientation string Base_Percentages - A (%), C(%), G
           (%), T (%), N (%) @optional Single_Genome Strain Source
           Number_of_Reads Total_Number_of_Bases GC_Percentage @optional
           Mean_Read_Length Read_Length_Std_Dev Phred_Type
           Number_of_Duplicate_Reads @optional Quality_Score_Min_Max
           Quality_Score_Mean_Std_Dev @optional Insert_Size_Mean
           Insert_Size_Std_Dev Outward_Read_Orientation Base_Percentages) ->
           structure: parameter "id" of String, parameter "Name" of String,
           parameter "workspace_name" of String, parameter "Type" of String,
           parameter "Platform" of String, parameter "Single_Genome" of
           String, parameter "Strain" of String, parameter "Source" of
           String, parameter "Number_of_Reads" of String, parameter
           "Total_Number_of_Bases" of String, parameter "GC_Percentage" of
           String, parameter "Mean_Read_Length" of String, parameter
           "Read_Length_Std_Dev" of String, parameter "Phred_Type" of String,
           parameter "Number_of_Duplicate_Reads" of String, parameter
           "Quality_Score_Min_Max" of String, parameter
           "Quality_Score_Mean_Std_Dev" of String, parameter
           "Insert_Size_Mean" of String, parameter "Insert_Size_Std_Dev" of
           String, parameter "Outward_Read_Orientation" of String, parameter
           "Base_Percentages" of String
        """
        return self._client.call_method('ReadsAPI.get_reads_info_all_formatted',
                                        [params], self._service_ver, context)

    def status(self, context=None):
        return self._client.call_method('ReadsAPI.status',
                                        [], self._service_ver, context)
